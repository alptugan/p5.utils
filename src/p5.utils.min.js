!function (e, t) { "function" == typeof define && define.amd ? define("p5.Utils", ["p5"], (function (e) { t(e) })) : "object" == typeof exports ? t(require("p5")) : t(e.p5) }(this, (function (e) { var t, o, i, n, l, s, a, r, d = !1, p = 0; const h = 20, y = "rgba(30,30,30,1)", g = "rgba(150,150,150,1)", u = "rgba(30,30,30,1)", c = "rgba(255,0,0,1)"; function m(e) { if (this.drawHorizontalRuler(), null != o) { let d = o.getBoundingClientRect(); i.strokeStyle = c, i.beginPath(), i.moveTo(e.pageX - d.left - .5, 0), i.lineTo(e.pageX - d.left - .5, h), i.stroke(), this.drawVerticalRuler(), l.strokeStyle = c, l.beginPath(), l.moveTo(0, e.pageY - .5 - 3), l.lineTo(h, e.pageY - .5 - 3), l.stroke(), t = e.pageX - h, n = e.pageY - h, s.style.width = t + "px", s.style.marginright = width - t + "px", s.style.left = "20px", s.style.top = n - 4 + h + "px", s.style.boxShadow = "0px 0px 5px rgba(0,0,0,0.7)", a.style.height = n - 4 + "px", a.style.width = t - 1 + h + "px", a.style.marginleft = t - 1 + "px", a.style.top = "20px", a.style.boxShadow = "0px 0px 5px rgba(0,0,0,0.7)", t + 70 < width && (r.style.left = t + 30 + "px"), n + 70 < height && (r.style.top = n + 40 + "px"), r.innerHTML = "x:" + t + "<br>y:" + (n - 3) } var t, n } e.Utils = function () { this.version = .01 }, e.Utils.prototype.debug = function (e) { document.getElementsByClassName("debug")[0] || (debug = document.createElement("div"), debug.className = "debug", document.body.appendChild(debug), debug.style.left = "2px", debug.style.lineHeight = 1.3, debug.style.fontFamily = "Consolas, Menlo, Monaco, monospace", debug.style.fontSize = "11px", debug.style.fontWeight = 100, debug.style.fontStyle = "normal", debug.style.fontVariant = "normal", debug.style.position = "absolute", debug.style.marginLeft = "30px", debug.style.marginBottom = innerHeight - height + 30 + "px", debug.style.left = "0px", debug.style.bottom = "0px", debug.style.color = u, debug.style.opacity = .5, debug.style.background = "rgba(255,255,255,0.5)", debug.style.padding = "4px 6px", debug.style.borderRadius = "4px", debug.style.cursor = "none", debug.style.zindex = "99999"), debug.innerHTML = ""; for (let t = 0; t < Object.keys(e).length; t++)debug.innerHTML += "<i>" + Object.keys(e)[t] + ": </i>" + Object.values(e)[t] + "</br>" }, e.Utils.prototype.getTimeStamp = function (e = !0) { var t; t = second() >= 10 ? hour() + "-" + minute() + "-" + second() : hour() + "-" + minute() + "-0" + second(); var o = year() + "-" + month() + "-" + day(); return e ? o + "_" + t : t }, e.Utils.prototype.getRandomInt = function (e, t) { return e = Math.ceil(e), t = Math.floor(t), Math.floor(Math.random() * (t - e) + e) }, e.Utils.prototype.saveCanvas = function (e = "", t = "png") { "" == e ? saveCanvas(this.getTimeStamp(), t) : saveCanvas(e + "_" + this.getTimeStamp(), t) }, e.Utils.prototype.arrayResize = function (e, t, o = -1) { e.length = 0; for (let i = 0; i < floor(t); i++)-1 != o && e.push(o); return e.length = floor(t), e }, e.Utils.prototype.beginShadow = function (e, t, o, i) { push(), drawingContext.shadowColor = e, drawingContext.shadowBlur = t, drawingContext.shadowOffsetY = i, drawingContext.shadowOffsetX = o }, e.Utils.prototype.endShadow = function () { pop() }, e.Utils.prototype.beginLinearGradient = function (e, t, o, i, n, l = []) { push(), fill(100), 0 == l.length && (l = this.arrayResize(l, e.length, .5)); var s = drawingContext.createLinearGradient(t, o, i, n); s.addColorStop(0, e[0]); for (var a = 1; a < e.length - 1; a++)s.addColorStop(l[a], e[a]); s.addColorStop(1, e[e.length - 1]), drawingContext.fillStyle = s }, e.Utils.prototype.endLinearGradient = function () { pop() }, e.Utils.prototype.text = function (e, o, i, n = 12, l = "sans-serif", s = LEFT, a = TOP) { push(), "sans-serif" == l || d ? "sans-serif" == l && (t = "sans-serif", textFont(t)) : t = loadFont(l, (function () { textFont(t), d = !0 })), textSize(n), textAlign(s, a), text(e, o, i), pop() }, e.Utils.prototype.notify = function (e) { return millis() - p > 1e3 * e && (p = millis(), !0) }, e.Utils.prototype.disableRuler = function () { window.removeEventListener("mousemove", m), o.style.display = "none", n.style.display = "none", canvas.style.marginLeft = "0px", canvas.style.marginTop = "0px", canvas.style.width = width + "px", canvas.style.height = height + "px", r.style.display = "none", s.style.display = "none", a.style.display = "none" }, e.Utils.prototype.enableRuler = function () { var e = document.getElementsByClassName("p5Canvas")[0]; width + h > innerWidth && (e.width = width - h, e.style.width = width - h + "px", parent.width = width - h), height + h > innerHeight && (e.height = height - h, e.style.height = height - h + "px", parent.height = height - h), e.style.marginLeft = "20px", e.style.marginTop = "20px", document.getElementsByClassName("pixelRulerH")[0] || ((o = document.createElement("canvas")).className = "pixelRulerH", document.body.appendChild(o)), o.width = width + h > innerWidth ? width : width + h, o.height = h, o.style.zindex = 1e4, o.style.position = "absolute", o.style.left = "0px", o.style.top = "0px", o.style.width = width + h > innerWidth ? width : width + h, o.style.height = "20px", o.style.display = "block", i = o.getContext("2d"), drawHorizontalRuler(), document.getElementsByClassName("pixelRulerV")[0] || ((n = document.createElement("canvas")).className = "pixelRulerV", document.body.appendChild(n)), n.width = h, n.height = height + h > innerHeight ? height : height + h, n.style.zindex = 1e4, n.style.position = "absolute", n.style.left = "0px", n.style.top = "0px", n.style.width = "20px", n.style.height = height + h > innerHeight ? height : height + h, n.style.display = "block", l = n.getContext("2d"), drawVerticalRuler(), document.getElementsByClassName("rulerLineX")[0] || ((s = document.createElement("div")).className = "rulerLineX", document.body.appendChild(s)), s.style.zindex = 1e5, s.style.position = "absolute", s.style.height = "0px", s.style.display = "block", s.style.border = "none", s.style.borderTop = "1px dashed rgba(30,30,30,1)", s.style.opacity = .7, document.getElementsByClassName("rulerLineY")[0] || ((a = document.createElement("div")).className = "rulerLineY", document.body.appendChild(a)), a.style.zindex = 100001, a.style.position = "absolute", a.style.height = "0px", a.style.width = "0px", a.style.display = "block", a.style.background = "rgba(255,255,255,0.2)", a.style.border = "none", a.style.borderRight = "1px dashed rgba(30,30,30,1)", a.style.opacity = .6, document.getElementsByClassName("rulerInfo")[0] || ((r = document.createElement("div")).className = "rulerInfo", document.body.appendChild(r)), r.style.zindex = 100002, r.style.position = "absolute", r.style.display = "block", r.style.top = "0px", r.style.left = "200px", r.style.fontSize = "11px", r.style.fontFamily = "monospace", r.style.color = u, r.style.background = "rgba(255,255,255,0.5)", r.style.padding = "3px", r.style.cursor = "none", window.addEventListener("mousemove", m) }, drawHorizontalRuler = function () { var e = i; e.clearRect(0, 0, o.width, h), e.fillStyle = y, e.fillRect(0, 0, o.width, h), e.strokeStyle = g, e.lineWidth = 1, e.beginPath(), e.moveTo(0, h), e.lineTo(o.width, h), e.stroke(); for (var t = h; t < o.width; t += 5)e.beginPath(), e.moveTo(t - .5, h), e.lineTo(t - .5, 16), e.stroke(); for (t = h; t < o.width; t += 10)e.beginPath(), e.moveTo(t - .5, h), e.lineTo(t - .5, 13), e.stroke(); e.fillStyle = g, e.font = "11px monospace", e.textBaseline = "top"; for (t = h; t < o.width; t += 100)e.beginPath(), e.moveTo(t - .5, h), e.lineTo(t - .5, 0), e.stroke(), t > 0 && e.fillText(t.toFixed(0) - h, t + 3, 1) }, drawVerticalRuler = function () { var e = l; e.clearRect(0, 0, h, n.height), e.fillStyle = y, e.fillRect(0, 0, n.width, n.height), e.strokeStyle = g, e.lineWidth = 1, e.beginPath(), e.moveTo(h, 0), e.lineTo(h, n.height), e.stroke(); for (var t = h; t < n.height; t += 5)e.beginPath(), e.moveTo(h, t - .5), e.lineTo(16, t - .5), e.stroke(); for (t = h; t < n.height; t += 10)e.beginPath(), e.moveTo(h, t - .5), e.lineTo(13, t - .5), e.stroke(); e.fillStyle = g, e.font = "11px monospace", e.textBaseline = "top"; for (t = h; t < n.height; t += 100)e.beginPath(), e.moveTo(h, t - .5), e.lineTo(0, t - .5), e.stroke(), t > h && (e.save(), e.translate(1, t), e.rotate(-Math.PI / 2), e.fillText((t - h).toFixed(0), 3, 1), e.restore()) } }));