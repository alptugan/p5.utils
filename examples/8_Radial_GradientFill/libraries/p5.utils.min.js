!function (e, t) { "function" == typeof define && define.amd ? define("p5.Utils", ["p5"], (function (e) { t(e) })) : "object" == typeof exports ? t(require("p5")) : t(e.p5) }(this, (function (e) { var t, l, r, o, i, n, s, p, a = !1, d = 0; function u(e) { if (this.drawHorizontalRuler(), null != l) { let a = l.getBoundingClientRect(); r.strokeStyle = p5rulerTickColor, r.beginPath(), r.moveTo(e.pageX - a.left - .5, 0), r.lineTo(e.pageX - a.left - .5, p5rulersize), r.stroke(), this.drawVerticalRuler(), i.strokeStyle = p5rulerTickColor, i.beginPath(), i.moveTo(0, e.pageY - .5 - 3), i.lineTo(p5rulersize, e.pageY - .5 - 3), i.stroke(), t = e.pageX - p5rulersize, o = e.pageY - p5rulersize, n.style.width = t + "px", n.style.marginright = width - t + "px", n.style.left = p5rulersize + "px", n.style.top = o - 4 + p5rulersize + "px", n.style.boxShadow = "0px 0px 5px rgba(0,0,0,0.7)", s.style.height = o - 4 + "px", s.style.width = t - 1 + p5rulersize + "px", s.style.marginleft = t - 1 + "px", s.style.top = p5rulersize + "px", s.style.boxShadow = "0px 0px 5px rgba(0,0,0,0.7)", t + 70 < width && (p.style.left = t + p5rulersize + 10 + "px"), o + 70 < height && (p.style.top = o + p5rulersize + 20 + "px"), p.innerHTML = "x:" + t + "<br>y:" + (o - 3) } var t, o } e.Utils = function () { this.version = .1, this.setRulerStyle() }, e.Utils.prototype.debug = function (e) { document.getElementsByClassName("debug")[0] || (debug = document.createElement("div"), debug.className = "debug", document.body.appendChild(debug), debug.style.left = "2px", debug.style.lineHeight = 1.3, debug.style.fontFamily = "Consolas, Menlo, Monaco, monospace", debug.style.fontSize = "11px", debug.style.fontWeight = 100, debug.style.fontStyle = "normal", debug.style.fontVariant = "normal", debug.style.position = "absolute", debug.style.marginLeft = "30px", debug.style.marginBottom = innerHeight - height + 30 + "px", debug.style.left = "0px", debug.style.bottom = "0px", debug.style.color = p5rulerInfoColor, debug.style.opacity = .5, debug.style.background = p5rulerInfoBgColor, debug.style.padding = "4px 6px", debug.style.borderRadius = "4px", debug.style.cursor = "none", debug.style.zindex = "99999"), debug.innerHTML = ""; for (let t = 0; t < Object.keys(e).length; t++)debug.innerHTML += "<i>" + Object.keys(e)[t] + ": </i>" + Object.values(e)[t] + "</br>" }, e.Utils.prototype.getTimeStamp = function (e = !0) { var t; t = second() >= 10 ? hour() + "-" + minute() + "-" + second() : hour() + "-" + minute() + "-0" + second(); var l = year() + "-" + month() + "-" + day(); return e ? l + "_" + t : t }, e.Utils.prototype.getRandomInt = function (e, t) { return e = Math.ceil(e), t = Math.floor(t), Math.floor(Math.random() * (t - e) + e) }, e.Utils.prototype.saveCanvas = function (e = "", t = "png") { "" == e ? saveCanvas(this.getTimeStamp(), t) : saveCanvas(e + "_" + this.getTimeStamp(), t) }, e.Utils.prototype.arrayResize = function (e, t, l = -1) { e.length = 0; for (let r = 0; r < floor(t); r++)-1 != l && e.push(l); return e.length = floor(t), e }, e.Utils.prototype.beginShadow = function (e, t, l, r) { push(), drawingContext.shadowColor = e, drawingContext.shadowBlur = t, drawingContext.shadowOffsetY = r, drawingContext.shadowOffsetX = l }, e.Utils.prototype.endShadow = function () { pop() }, e.Utils.prototype.beginRadialGradient = function (e, t, l, r, o = -1, i = -1, n = -1, s = -1) { if (push(), fill(0), null == e || e.length < 2) noLoop(); else { -1 !== o && -1 !== i && -1 !== n || (o = t, i = l, r = .1 * (n = r)); var p = drawingContext.createRadialGradient(t, l, r, o, i, n); p.addColorStop(0, e[0]), e.length > 2 && (-1 == s ? p.addColorStop(.5, e[1]) : p.addColorStop(s, e[1])), p.addColorStop(1, e[e.length - 1]), drawingContext.fillStyle = p } }, e.Utils.prototype.endRadialGradient = function () { pop() }, e.Utils.prototype.beginLinearGradient = function (e, t, l, r, o, i = []) { push(), fill(100), 0 == i.length && (i = this.arrayResize(i, e.length, .5)); var n = drawingContext.createLinearGradient(t, l, r, o); n.addColorStop(0, e[0]); for (var s = 1; s < e.length - 1; s++)n.addColorStop(i[s], e[s]); n.addColorStop(1, e[e.length - 1]), drawingContext.fillStyle = n }, e.Utils.prototype.endLinearGradient = function () { pop() }, e.Utils.prototype.text = function (e, l, r, o = 12, i = "sans-serif", n = LEFT, s = TOP) { push(), "sans-serif" == i || a ? "sans-serif" == i && (t = "sans-serif", textFont(t)) : t = loadFont(i, (function () { textFont(t), a = !0 })), textSize(o), textAlign(n, s), text(e, l, r), pop() }, e.Utils.prototype.notify = function (e) { return millis() - d > 1e3 * e && (d = millis(), !0) }, e.Utils.prototype.setRulerStyle = function (e = "rgba(30,30,30,1)", t = "rgba(150,150,150,1)", l = 20, r = "rgba(30,30,30,1)", o = "rgba(255,255,255,0.5)", i = "rgba(255,0,0,1)", n = "11px monospace") { p5rulerBgColor = e, p5rulerTxtColor = t, p5rulersize = l, p5rulerInfoColor = r, p5rulerInfoBgColor = o, p5rulerTickColor = i, p5rulerFont = n }, e.Utils.prototype.disableRuler = function () { window.removeEventListener("mousemove", u), l.style.display = "none", o.style.display = "none", canvas.style.marginLeft = "0px", canvas.style.marginTop = "0px", canvas.style.width = width + "px", canvas.style.height = height + "px", p.style.display = "none", n.style.display = "none", s.style.display = "none" }, e.Utils.prototype.enableRuler = function () { var e = document.getElementsByClassName("p5Canvas")[0], t = width, a = height; width + p5rulersize > innerWidth && (t = width - p5rulersize, resizeCanvas(t, height)), height + p5rulersize > innerHeight && (a = height - p5rulersize, resizeCanvas(t, a)), e.style.marginLeft = p5rulersize + "px", e.style.marginTop = p5rulersize + "px", document.getElementsByClassName("pixelRulerH")[0] || ((l = document.createElement("canvas")).className = "pixelRulerH", document.body.appendChild(l)), l.width = width + p5rulersize > innerWidth ? width : width + p5rulersize, l.height = p5rulersize, l.style.zindex = 1e4, l.style.position = "absolute", l.style.left = "0px", l.style.top = "0px", l.style.width = width + p5rulersize > innerWidth ? width : width + p5rulersize, l.style.height = p5rulersize + "px", l.style.display = "block", r = l.getContext("2d"), drawHorizontalRuler(), document.getElementsByClassName("pixelRulerV")[0] || ((o = document.createElement("canvas")).className = "pixelRulerV", document.body.appendChild(o)), o.width = p5rulersize, o.height = height + p5rulersize > innerHeight ? height : height + p5rulersize, o.style.zindex = 1e4, o.style.position = "absolute", o.style.left = "0px", o.style.top = "0px", o.style.width = p5rulersize + "px", o.style.height = height + p5rulersize > innerHeight ? height : height + p5rulersize, o.style.display = "block", i = o.getContext("2d"), drawVerticalRuler(), document.getElementsByClassName("rulerLineX")[0] || ((n = document.createElement("div")).className = "rulerLineX", document.body.appendChild(n)), n.style.zindex = 1e5, n.style.position = "absolute", n.style.height = "0px", n.style.display = "block", n.style.border = "none", n.style.borderTop = "1px dashed " + p5rulerInfoColor, n.style.opacity = .7, document.getElementsByClassName("rulerLineY")[0] || ((s = document.createElement("div")).className = "rulerLineY", document.body.appendChild(s)), s.style.zindex = 100001, s.style.position = "absolute", s.style.height = "0px", s.style.width = "0px", s.style.display = "block", s.style.background = "rgba(255,255,255,0.2)", s.style.border = "none", s.style.borderRight = "1px dashed " + p5rulerInfoColor, s.style.opacity = .6, document.getElementsByClassName("rulerInfo")[0] || ((p = document.createElement("div")).className = "rulerInfo", document.body.appendChild(p)), p.style.zindex = 100002, p.style.position = "absolute", p.style.display = "block", p.style.top = "0px", p.style.left = "0px", p.style.fontSize = "11px", p.style.fontFamily = "monospace", p.style.color = p5rulerInfoColor, p.style.background = p5rulerInfoBgColor, p.style.padding = "3px", p.style.cursor = "none", window.addEventListener("mousemove", u) }, drawHorizontalRuler = function () { var e = r; e.clearRect(0, 0, l.width, p5rulersize), e.fillStyle = p5rulerBgColor, e.fillRect(0, 0, l.width, p5rulersize), e.strokeStyle = p5rulerTxtColor, e.lineWidth = 1, e.beginPath(), e.moveTo(0, p5rulersize), e.lineTo(l.width, p5rulersize), e.stroke(); for (var t = p5rulersize; t < l.width; t += 5)e.beginPath(), e.moveTo(t - .5, p5rulersize), e.lineTo(t - .5, p5rulersize - 4), e.stroke(); for (t = p5rulersize; t < l.width; t += 10)e.beginPath(), e.moveTo(t - .5, p5rulersize), e.lineTo(t - .5, p5rulersize - 7), e.stroke(); e.fillStyle = p5rulerTxtColor, e.font = p5rulerFont, e.textBaseline = "top"; for (t = p5rulersize; t < l.width; t += 100)e.beginPath(), e.moveTo(t - .5, p5rulersize), e.lineTo(t - .5, 0), e.stroke(), t > 0 && e.fillText(t.toFixed(0) - p5rulersize, t + 3, 1) }, drawVerticalRuler = function () { var e = i; e.clearRect(0, 0, p5rulersize, o.height), e.fillStyle = p5rulerBgColor, e.fillRect(0, 0, o.width, o.height), e.strokeStyle = p5rulerTxtColor, e.lineWidth = 1, e.beginPath(), e.moveTo(p5rulersize, 0), e.lineTo(p5rulersize, o.height), e.stroke(); for (var t = p5rulersize; t < o.height; t += 5)e.beginPath(), e.moveTo(p5rulersize, t - .5), e.lineTo(p5rulersize - 4, t - .5), e.stroke(); for (t = p5rulersize; t < o.height; t += 10)e.beginPath(), e.moveTo(p5rulersize, t - .5), e.lineTo(p5rulersize - 7, t - .5), e.stroke(); e.fillStyle = p5rulerTxtColor, e.font = p5rulerFont, e.textBaseline = "top"; for (t = p5rulersize; t < o.height; t += 100)e.beginPath(), e.moveTo(p5rulersize, t - .5), e.lineTo(0, t - .5), e.stroke(), t > p5rulersize && (e.save(), e.translate(1, t), e.rotate(-Math.PI / 2), e.fillText((t - p5rulersize).toFixed(0), 3, 1), e.restore()) } }));